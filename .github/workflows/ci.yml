name: MLOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: votre-username/house-price-api

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python test_app.py
        
    - name: Train model
      run: |
        python train.py
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        
    - name: Build Docker image
      run: |
        docker build -t house-price-api .
        
    - name: Test Docker container
      run: |
        docker run -d --name test-api -p 8000:8000 house-price-api
        sleep 30
        curl -f http://localhost:8000/health || (docker logs test-api && exit 1)
        docker stop test-api
        docker rm test-api
    
    # Push vers Docker Hub seulement si c'est un push sur main (pas sur PR)
    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Create tags
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # Tag avec le commit SHA court
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        docker tag house-price-api ${{ env.DOCKER_IMAGE }}:latest
        docker tag house-price-api ${{ env.DOCKER_IMAGE }}:$SHORT_SHA
        docker tag house-price-api ${{ env.DOCKER_IMAGE }}:$(date +%Y%m%d-%H%M%S)
        
    - name: Push to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        # Push tous les tags
        docker push ${{ env.DOCKER_IMAGE }}:latest
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
        docker push ${{ env.DOCKER_IMAGE }}:$SHORT_SHA
        docker push ${{ env.DOCKER_IMAGE }}:$(date +%Y%m%d-%H%M%S)
        
    - name: Cleanup
      if: always()
      run: |
        docker system prune -f